LAST LOGIN SCRIPT : 
#!/bin/bash
# Check if the script is being run as root
if [ "$EUID" -ne 0 ]; then
    echo "Please run this script as root"
    exit 1
fi

echo "Last login details:"
last


%ADDING HOSST AND IP ADDRESS
#!/bin/bash
read -p "Enter host:" hostname
read -p "Enter IP address of the host:" ip sed -L.bkp'$ a Shostname $ip" /etc/hosts

EXPERIMENT 7 TASKS  
1.WHICHBASH AND SHELL :  
vboxuser@UBUNTU:~$ which bash
vboxuser@UBUNTU:~$ cat /etc/shells

TASK 1 ODD OR EVEN 
#!/bin/bash
read -p "Enter a number: " num
if [ $((num % 2)) -eq 0 ]; then
    echo "$num is even."
else
    echo "$num is odd."
fi

TASK 2 FACTORIAL OF NUMBER 
#!/bin/bash
echo "Enter a number:"
read num
factorial=1
for ((i=1; i<=num; i++)); do
    factorial=$((factorial * i))
done
echo "Factorial of $num is $factorial."

TASK 3 PALINDROME 
#!/bin/bash
echo "Enter a string:"
read input_string
# Reverse the string
reversed_string=$(echo "$input_string" | rev)
# Check if the original string is equal to the reversed string
if [ "$input_string" = "$reversed_string" ]; then
    echo "Palindrome"
else
    echo "Not a Palindrome"
fi

TASK 4 fibonnacci series
#!/bin/bash
c=2
a=1
b=1
d=0
echo  "enter the number of elements"
read n
echo "$a"
echo "$b"
while((c<n))
do
d=$((a+b))
echo "$d"
a=$b
b=$d
c=$((c+1))
done


to add ownership use sudo chmod 777(readwriteexecute)(421)

#RECURSSIVE FILE CHANGE : 
touch file1 file2 file3
sudo chmod 777 file1 file2 file3

#CHANGE OWNER SHIP :
SUDO CHOWN SHREY1 FILE1
ls -l

#REMOVE FILE 
SUDO RM FILE1


#TO ADD USER 
SUDO ADDUSER SHREY1

#TO CREATE GROUP 
SUDO ADDGROUP STUDENTS

#TO DELETE USER
#SUDO DELUSER SHREY1







#commands

	1.	User Management:
	•	useradd: Add a new user.
	•	passwd: Change user password.
	•	usermod: Modify user account.
	•	userdel: Delete a user account.
	2.	Process Management:
	•	ps: Display information about active processes.
	•	top: Display and update sorted information about processes.
	•	kill: Terminate processes.
	•	killall: Terminate processes by name.
	3.	File Management:
	•	ls: List directory contents.
	•	cp: Copy files and directories.
	•	mv: Move or rename files and directories.
	•	rm: Remove files or directories.
	4.	System Configuration:
	•	ifconfig: Configure network interfaces.
	•	iptables: Configure firewall rules.
	•	hostname: Set or view hostname.

Sure, here are all the commands for user management in Linux:

1. **Add Group:**
   ```bash
   sudo groupadd <groupname>
   ```

2. **Add User:**
   ```bash
   sudo useradd -m -G <groupname> <username>
   ```
   `-m` creates the user's home directory, and `-G` adds the user to a supplementary group.

3. **Check User Created:**
   ```bash
   id <username>
   ```
   This command displays information about the specified user, including their UID (user ID) and groups.

4. **Grant Sudo Privileges:**
   - First, open the sudoers file for editing:
     ```bash
     sudo visudo
     ```
   - Add a line to grant sudo privileges to the user. For example:
     ```bash
     <username> ALL=(ALL:ALL) ALL
     ```
     This line grants the user `username` sudo privileges for all commands.

5. **Change User Password:**
   ```bash
   sudo passwd <username>
   ```
   This command allows you to change the password for the specified user.

6. **Modify User Account:**
   ```bash
   sudo usermod -aG <additional_group> <username>
   ```
   This command adds the user to an additional group.

7. **Delete User Account:**
   ```bash
   sudo userdel -r <username>
   ```
   `-r` removes the user's home directory and mail spool.

Remember to replace `<groupname>` and `<username>` with the actual names of the group and user you want to create or modify. Use these commands carefully, especially when dealing with system-level configurations.



